1.make all -j4 代表四线程
2.make clean 后可以重新make
make -n clean # -n表示不真正执行，假装执行,看看输出
3.touch XX.xxx 创建一个新文件
4.g++ -c helloworld.cpp 
  g++ helloworld.o -o helloworld
  ./helloworld
  或者
  g++ -o a1 a1.cpp
  ./a1


5.创建一个工程的步骤:
 (1):新建工程目录demo1
 (2):在demo1目录下写xx.cpp
 (3):在demo1目录下写CMakeLists.txt,内容示范如下 (第一行项目名，第三行可执行文件名)
    project(demo1)  
	find_package(OpenCV REQUIRED)  
	add_executable(testOPenCV xx.cpp)  
	target_link_libraries(testOPenCV ${OpenCV_LIBS})  
	cmake_minimum_required(VERSION 2.8)
 (4):	cd demo1
	mkdir build
	cmake ..
	make 
	./testOPenCV
 对代码修改后只需重新make再执行就可以了

 若需要加入c++11特性,则在project(demo1)下面加入
	SET(CMAKE_C_COMPILER g++)
	add_compile_options(-std=c++11)

6.所有以/开头的目录都是绝对路径
  所有相对路径可以直接不要/或者以./开头 （表示当前目录）

7.查看环境变量 echo $PATH
cat
nl,cat并显示行号
od,用二进制查看
which 查看可执行文件路径
file 查看指定文件类型
exit 退出终端
whereis,locate 查找
删除非空目录 rm -r
ls -l *.cpp 列出指定文件，可用通配符
dpkg -L xxxx 查看软件安装位置


ls -l  第二列是硬链接数，子目录越多通常硬链接数越大
chmod +rw #增加可读写权限
chmod -rw #去掉可读写权限
sudo chgrp -R dev python学习/  #改变指定目录的用户组
which ls /bin/ls   # 查看文件所在位置
su yxp1 #切换用户
su -  #切换到root

sudo useradd -m -g groupname username # 添加用户 -m创建家目录 -g指定用户组
sudo userdel -r #删除用户 -r删除家目录

chown chgrp chmod #修改文件所有者、组、权限，chown不需要-R即可递归修改目录，后两个需要加-R递归修改目录

date #查看系统时间
cal #查看日历 -y 可以查看一年的日历

df -h #磁盘剩余空间
du -h #磁盘使用情况

ps aux  #process status 显示进程  a所有用户 u显示详细信息 x	显示没有控制终端的进程，常用:ps au
ps ajx # 可以查看进程的父进程(ppid,pgid(组id),sid(会话id)),

top #显示当前系统进程  按照cpu内存使用排序	

ln -s 被链接的文件 快捷方式名称 #建立软链接、尽量用绝对路径，移动了后才能工作
-s代表软链接  否则硬链接

安装搜狗输入法:
1.下载后安装
2.安装完成后im-config 选择fcitx
3.之后fcitx-config-gtk3，选择添加选择搜狗拼音
4.右上角调用搜狗拼音


time ./a.out # 可以查看程序运行消耗的时间，real代表总共，user代表代码操作部分，sys代表系统消耗的

ll
文件名后面带*表示是可执行文件(不管哪个部分有x都是)

自己用gcc编译出的可执行文件默认是771权限

ls的输出颜色不止3种，有以下几种，
白色：表示普通文件
蓝色：表示目录
绿色：表示可执行文件
红色：表示压缩文件
浅蓝色：链接文件
红色闪烁：表示链接的文件有问题
黄色：表示设备文件
灰色：表示其他文件


//g++编译使用了多线程的程序的时候报错:
terminate called after throwing an instance of 'std::system_error'
  what():  Enable multithreading to use std::thread: Operation not permitted
Aborted (core dumped)

解决:
编译的时候加上选项 -pthread

sudo apt-get install aptitude #这个软件类似于apt-get ,但是可以用show查看已经安装的软件的信息
sudo aptitude show xinetd

sudo service xinetd restart   # 重启服务，停止:stop，开启:start

unicode 汉字  #查看对应unicode编码
man ascii #查看ascii码表


ctags ./*.c -R  #在当前目录生成tags文件
ctrl + ] #跳转到函数定义
ctrl + T #跳回起始位置
ctrl + o #显示当前工程目录结构
F4 查看模块内的函数列表
[d # vi自带的查看宏定义

grep -r "socket(" ./  # 在当前目录搜索所有带socket(字符串的文件

ps aux | grep bash | awk {'print $2'}  # awk 表示按列提取，这里是提取后打印第二列

usermod -l  new_name  old_name  # 修改用户登录名 ,-l 代表login,-m代表修改家目录


iotop,powertop,nettop  # 分别查看io,power,net的进程排序，需要先安装以及sudo


echo "128212.a.a" | sudo tee -a ./a.txt  # tee是把一个输出从标准输出拷贝到文件(追加)，需要sudo

pidof # 查看进程对应pid
kill -9 $(pidof ./a.out)  #配合kill杀死指定进程

 dialog --title "oh hey" --inputbox "how do you do ?" 8 55  # 显示一个对话框


touch 创建的文件默认是0664权限
vim 创建的文件也是664

ctrl+j #等于回车
ctrl+h #等于backspace
ctrl+s #暂停当前屏幕输出
ctrl+q #回复屏幕输出
ctrl+d #输入exit
ctrl+m #输入回车
vim 忽略大小写搜索:   /xxx/c 忽略大小写  /xxx/C  不忽略大小写
less 忽略大小写搜索: env | less -i
